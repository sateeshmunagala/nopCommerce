@model ProductDetailsModel

@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Seo;
@inject Nop.Services.Html.IHtmlFormatter htmlFormatter
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Customers
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CustomerSettings customerSettings
@{
    Layout = "_ColumnsTwoRight";

    //title
    NopHtml.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    NopHtml.AddMetaDescriptionParts(Model.MetaDescription);
    NopHtml.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    NopHtml.AppendPageCssClassParts("html-product-details-page");


    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl<Product>(new { SeName = Model.SeName }, webHelper.GetCurrentRequestProtocol()).ToLowerInvariant();
        NopHtml.AddCanonicalUrlParts(productUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        NopHtml.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(htmlFormatter.StripTags(Model.MetaDescription)) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(htmlFormatter.StripTags(Model.MetaDescription)) + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        NopHtml.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
    }
    Model.PrivateMessageModel.ProductId = Model.AddToCart.ProductId;
}
<!--product breadcrumb-->
<div class="breadcrumb-wrapper">
    @await Html.PartialAsync("_ProductBreadcrumb", Model.Breadcrumb)
</div>
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsAfterBreadcrumb, additionalData = Model })
<div class="page product-details-page">
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsTop, additionalData = Model })
        <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential from-panel">
                    <div class="product-name panel-heading">
                        <div itemprop="name" class="row">
                            <div class="col-md-12">
                                <h1 itemprop="name">
                                    @Model.Name
                                    <span class="profile-last-online">Last Online: @Model.LastLoginDateTime</span>
                                </h1>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-3">
                                    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsEssentialTop, additionalData = Model })
                                    <!--product pictures-->
                                    @await Html.PartialAsync("_ProductDetailsPictures", Model)
                                </div>
                                <div class="col-md-9">
                                    @*@await Html.PartialAsync("_Discontinued", Model)*@
                                    <div class="overview">
                                        <div class="email-compare-button">
                                            <!--wishlist, compare, email a friend-->
                                            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsInsideOverviewButtonsBefore, additionalData = Model })
                                            @{
                                                var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                                                dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                                @await Html.PartialAsync("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                            }
                                            @await Html.PartialAsync("_ProductEmailAFriendButton", Model)

                                            @{
                                                var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                                dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                                @*@await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)*@
                                            }
                                        </div>
                                        @if (@Model.AddToCart.ProfileShortListed)
                                        {
                                            <div class="email-compare-button private-message-read">
                                                <span class="profile-shortlisted">
                                                    Short Listed On : @Model.AddToCart.ProfileShortListedOn
                                                </span>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(Model.PrivateMessageModel.Message))
                                        {
                                            <div class="email-compare-button private-message-read">
                                                @await Html.PartialAsync("_PrivateMessage", Model.PrivateMessageModel)
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                        {
                                            <div class="short-description">
                                                @Html.Raw(Model.ShortDescription)
                                            </div>
                                        }
                                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsOverviewTop, additionalData = Model })
                                        <!--product reviews-->
                                        @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                                        <!--attributes-->
                                        @{
                                            var dataDictAttributes = new ViewDataDictionary(ViewData);
                                            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                            @await Html.PartialAsync("_ProductAttributes", Model, dataDictAttributes)
                                        }
                                        <!--gift card-->
                                        @{
                                            var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                            @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                        }
                                        <!--Profile Information-->
                                        <div class="price-availability">
                                            <div class="prices">
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-person icon-color icon-size"></i>
                                                        </span>
                                                        Profile Type :
                                                        @if (!string.IsNullOrEmpty(Model.Gender))
                                                        {
                                                            if (Model.Gender == "M")
                                                            {
                                                                <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                                    He is ready to @Model.ProfileType
                                                                </span>
                                                            }
                                                            else
                                                            {
                                                                <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                                    She is ready to  @Model.ProfileType
                                                                </span>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                                He/She ready to  @Model.ProfileType
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-cpu icon-color icon-size"></i>
                                                        </span>
                                                        Primary Technology :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.PrimaryTechnology
                                                        </span>
                                                    </div>
                                                </div>
                                                @if (customerSettings.ShowSecondaryTechnologySpecificationAttribute)
                                                {
                                                    <div class="product-price">
                                                        <div class="price-inclusive-text">
                                                            Secondary Technology :
                                                            <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                                @Model.SecondaryTechnology
                                                            </span>
                                                        </div>
                                                    </div>
                                                }
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-bookmark icon-color icon-size"></i>
                                                        </span>
                                                        Relavent Experiance :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.RelaventExperiance
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-check-circle icon-color icon-size"></i>
                                                        </span>
                                                        Current Avalibility :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.CurrentAvalibility
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-translate icon-color icon-size"></i>
                                                        </span>
                                                        Mother Tongue :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.MotherTongue
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span>
                                                            <i class="bi bi-geo-alt icon-color icon-size"></i>
                                                        </span>
                                                        Location :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.Location
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="product-price">
                                                    <div class="price-inclusive-text">
                                                        <span style="margin-top:5px;">
                                                            <i class="bi bi-clock icon-color icon-size"></i>
                                                        </span>
                                                        Last Online :
                                                        <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                            @Model.LastLoginDateTime
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="product-price" style="font-weight:100;">
                                                    <div class="price-inclusive-text" style="height:30px !important;">
                                                        <div id="product-@Model.Id" class="email-a-friend" style="float: left;">
                                                            <i class="bi bi-envelope icon-color icon-size"></i>
                                                            EmailId :
                                                            <a class="product-item-links profile-info-links" href="#" onclick="ShowMobileNumber();">
                                                                example@outlook.com
                                                            </a>
                                                            <i class="fa fa-lock fa-lg icon-color" title="click to unlock"></i>
                                                        </div>
                                                        <div style="float:left;margin-left: 15px;">
                                                            <a class="btn btn-primary btn-sm" href="#" role="button" onclick="ShowMobileNumber();">
                                                                View Email
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="product-price" style="font-weight:100;">
                                                    <div class="price-inclusive-text" style="height:30px !important;">
                                                        <div id="product-@Model.Id" class="email-a-friend" style="float: left;">
                                                            <i class="bi bi-phone icon-color icon-size"></i>
                                                            Mobile Number :
                                                            <a class="profile-info-links" href="#" onclick="ShowMobileNumber();">
                                                                (123)456789
                                                            </a>
                                                            <i class="fa fa-lock fa-lg icon-color" title="click to unlock"></i>
                                                        </div>
                                                        <div style="float:left;margin-left: 15px;">
                                                            <a class="btn btn-primary btn-sm" href="#" role="button" onclick="ShowMobileNumber();">
                                                                View Mobile
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<div class="product-price" style="font-weight:100;">
                                                <div class="price-inclusive-text" style="height:30px !important;">
                                                <div id="product-@Model.Id" class="email-a-friend">
                                                <i class="fa fa-mobile-phone fa-lg icon-color" title="click to unlock"></i>
                                                Joined Date :
                                                <span itemprop="price" class="price-value-1025" style="font-size:14px;">
                                                @Model.LastLoginDateTime
                                                </span>
                                                </div>
                                                </div>
                                                </div>*@
                                            </div>
                                        </div>
                                        @await Html.PartialAsync("_ShareButton", Model)
                                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsOverviewBottom, additionalData = Model })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="product-details-tabs">
                                        <ul class="nav nav-tabs">
                                            @if (!string.IsNullOrEmpty(Model.FullDescription))
                                            {
                                                <li class="active">
                                                    <a href="#description" data-toggle="tab">Profile Description</a>
                                                </li>
                                            }
                                            @if (!string.IsNullOrEmpty(@Html.PartialAsync("_ProductTags", Model).ToString()))
                                            {
                                                @* <li><a href="#tags" data-toggle="tab">@T("Products.Tags")</a></li> *@
                                            }
                                            @if (!string.IsNullOrEmpty(@Html.PartialAsync("_ProductSpecifications", Model).ToString()))
                                            {
                                                <li><a href="#specification" data-toggle="tab">@T("Products.Specs")</a></li>
                                            }
                                        </ul>
                                        <div class="tab-content">
                                            @if (!string.IsNullOrEmpty(Model.FullDescription))
                                            {
                                                <div class="full-description tab-pane fade in active" id="description" itemprop="description">
                                                    @Html.Raw(Model.FullDescription)
                                                </div>
                                            }
                                            @*  <div class="product-tags tab-pane fade" id="tags">
                                                @await Html.PartialAsync("_ProductTags", Model.ProductTags)
                                            </div> *@
                                            <div class="product-specification fade tab-pane" id="specification">
                                                @await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecificationModel)
                                            </div>
                                        </div>
                                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsEssentialBottom, additionalData = Model })
                                    </div>
                                </div>
                            </div>
                        </div>
                        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsBeforeCollateral, additionalData = Model })
                    </div>
                    <div class="product-collateral">
                        @await Component.InvokeAsync(typeof(ProductsAlsoPurchasedViewComponent), new { productId = Model.Id })
                        @await Component.InvokeAsync(typeof(RelatedProductsViewComponent), new { productId = Model.Id })
                    </div>
                </div>
            </div>
        </form>
        @* @await Html.PartialAsync("_ProductReviews", Model.ProductReviews) *@
        <!--product reviews-->
        @if (Model.ProductReviewOverview.AllowCustomerReviews)
        {
            @await Html.PartialAsync("_ProductReviews", Model.ProductReviews)
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductDetailsBottom, additionalData = Model })
    </div>
</div>
