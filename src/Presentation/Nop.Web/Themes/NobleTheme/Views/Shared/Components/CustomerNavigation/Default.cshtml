@model CustomerNavigationModel

<<<<<<< Updated upstream

@*customization*@
@await Component.InvokeAsync(typeof(CustomerInfoViewComponent), new { orderId = 0 })


=======
>>>>>>> Stashed changes
<div class="block block-account-navigation well box-shadow-wrapper">
    <div class="title main-title" id="myAccountMenu">
        <strong>@T("Account.Navigation")</strong>
    </div>
    <div class="listbox">
        <nav id="my-AccountMenu">
            <a id="menu-close-icon-account" class="close-icon-account">
                <i class="fa fa-times" style="font-size: 2rem;"></i>
            </a>
            <ul class="nav nav-list">
                @foreach (var item in Model.CustomerNavigationItems)
                {
                    if (@item.ItemClass == "customer-info")
                    {
                        <li class="reward-points @(Model.SelectedTab == item.Tab ? "active" : "inactive")">
                            <a href="@Url.RouteUrl(item.RouteName)">@(item.Title)</a>
                        </li>
                    }
                    else
                    {
                        <li class="@item.ItemClass @(Model.SelectedTab == item.Tab ? "active" : "inactive")">
                            <a href="@Url.RouteUrl(item.RouteName)">@(item.Title)</a>
                        </li>
                    }
                }
            </ul>
        </nav>
    </div>
</div>

<script>
    document.addEventListener(
        "DOMContentLoaded", () => {
            const menuAccount = new MmenuLight(
                document.querySelector("#my-AccountMenu"),
                "(max-width: 800px)",
            );

            const navigator = menuAccount.navigation({
                title: 'My Account',
                //slidingSubmenus: false,
                theme: "light"
            });

            const drawerAccount = menuAccount.offcanvas({
                position: 'left'
            });

            document.querySelector("div[id='myAccountMenu']")
                .addEventListener("click", (evnt) => {
                    evnt.preventDefault();
                    drawerAccount.open();
                });

            document.querySelector("a[id='menu-close-icon-account']")
                .addEventListener("click", (evnt) => {
                    evnt.preventDefault();
                    drawerAccount.close();
                });

            if (matchMedia) {
                var mq = window.matchMedia("(min-width: 624px)");
                mq.addListener(WidthChange);
                WidthChange(mq);
            }

            // media query change
            function WidthChange(mq) {
                if (mq.matches) {
                    // window width is at least 624px
                    //navigator.close();
                    drawerAccount.close();
                    console.log("window width is at least 824px");

                } else {
                    // window width is less than 624px
                    console.log("window width is less than 824px");
                    //navigator.preventDefault();
                    //drawerAccount.preventDefault();

                }
            }
        }
    );
</script>

<style>

    @@media (min-width:480px) {
        .close-icon-account {
            display: none !important;
        }
    }

<<<<<<< Updated upstream
    /*  @@media (min-width: 480px) {
                    #myAccountMenu {
                        display: none !important;
                    }
                } */

    /*  @@media (min-width: 1024px) {
                    #myAccountMenu {
                        display: none !important;
                    }
                } */
=======
   /*  @@media (min-width: 480px) {
        #myAccountMenu {
            display: none !important;
        }
    } */

   /*  @@media (min-width: 1024px) {
        #myAccountMenu {
            display: none !important;
        }
    } */
>>>>>>> Stashed changes

    .close-icon-account {
        float: right;
        width: 30px !important;
        margin-right: 0px !important;
        padding-left: 0px !important;
        padding-right: 0px !important;
    }

    .mm-spn ul li.active > a {
        background-color: #F5F5F5;
        border-left: 5px solid #20b2aa;
        text-decoration: none;
    }

    .mm-spn.mm-spn--light {
        color: black !important;
        background-color: white;
    }
</style>
